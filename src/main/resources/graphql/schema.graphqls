type Query {
    getAllRestaurants: [Restaurant!]!
    getRestaurant(id: ID!): Restaurant!
}

type DishCategory {
    id: ID!
    name: String!
}

type Dish {
    id: ID!
    name: String!
    price: Float!
    image: String
    description: String
    category: DishCategory!
}

type Restaurant {
    id: ID!
    name: String!
    rating: Float
    location: String
    deliveryTime: Int
    image: String
    createdAt: String
    updatedAt: String
    topDishes: [Dish!]!
    categories: [DishCategory!]!
}

input CreateRestaurantInput {
    name: String!
    rating: Float
    location: String
}

input CreateDishInput {
    name: String!
    price: Float!
    image: String
    description: String
    restaurantId: ID!
}

input CreateDishCategoryInput {
    name: String!
    restaurantId: ID!
}

type Mutation {
    createRestaurant(input: CreateRestaurantInput!): Restaurant!
    createDish(input: CreateDishInput!): Dish!
    createDishCategory(input: CreateDishCategoryInput!): DishCategory
}

